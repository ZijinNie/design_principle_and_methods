package ca.mcgill.ecse211.project;

import lejos.hardware.Button;
import static ca.mcgill.ecse211.project.Resources.TURNING_THRESHOLD;
import ca.mcgill.ecse211.project.USDriver;
/**
 * The main driver class for the lab.
 */
public class Main {
  /**
   * The main entry point.
   * 
   * @param args not used
   */
  public static void main(String[] args) {

    float cur;
    float prev;
    float firstAngle, secondAngle;
//    Printer.printMainMenu();
    USDriver usDriver= new USDriver();
    CircleTurningDriver circleturningDriver = new CircleTurningDriver();
    Thread usThread = new Thread(usDriver);
//    Thread driverThread = new Thread(circleturningDriver);
    Thread odo = new Thread(Resources.odometer);
    while(Button.waitForAnyPress() != Button.ID_ENTER);
    
//    new Thread(new Display()).start();
    usThread.start();
//    driverThread.start();
    odo.start(); 
    
    cur = usDriver.getCurDist();
    prev = usDriver.getCurDist();
    int count = 0;
    
    while(true) {
      cur = usDriver.getCurDist();
      if((cur<= TURNING_THRESHOLD && prev >= TURNING_THRESHOLD) 
          || (cur>= TURNING_THRESHOLD && prev <= TURNING_THRESHOLD)) {
        count +=1;
        if(count ==0) {
          firstAngle = (float)Resources.odometer.getXyt()[2];
        }else {
          secondAngle = (float)Resources.odometer.getXyt()[2];
          CircleTurningDriver.stopMotors();
          usDriver.stop();
          break;
        }
      }
      prev = cur;
    }

    
    
    float xDist = 10;
    float yDist = 10;
    

    while (Button.waitForAnyPress() != Button.ID_ENTER);
    
    circleturningDriver.setTurningAngle( (angle+135)%360 );
    circleturningDriver.setxDistance(xDist);
    circleturningDriver.setyDistance(yDist);
    
    circleturningDriver.setStartHeadingDes(true);

    
//    driverThread
    
    while (Button.waitForAnyPress() != Button.ID_ESCAPE) {
    } // do nothing
    
    System.exit(0);
  }

  /**
   * Sleeps current thread for the specified duration.
   * 
   * @param duration sleep duration in milliseconds
   */
  public static void sleepFor(long duration) {
    try {
      Thread.sleep(duration);
    } catch (InterruptedException e) {
      // There is nothing to be done here
    }
  }
  
}
